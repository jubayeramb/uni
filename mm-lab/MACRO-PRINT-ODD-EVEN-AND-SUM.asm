INCLUDE 'EMU8086.INC'
.MODEL SMALL
.STACK 100H

.DATA
ARR DW 100 DUP(?)       
ODD_ARR DW 100 DUP(?)   
EVEN_ARR DW 100 DUP(?)  
N DW ?
ODD_COUNT DW 0
EVEN_COUNT DW 0                
ODD_SUM DW 0           
EVEN_SUM DW 0           
DIVISOR DW 2           

.CODE    
ENTER_NUMBERS MACRO ARR, N
     MOV CX, N
     MOV SI, 0
     ENTER_LOOP:
     PRINT 'ENTER AN ELEMENT: '
     PUSH CX
     CALL SCAN_NUM
     MOV ARR[SI], CX   
     ADD SI, 2
     POP CX
     PRINTN ''
     LOOP ENTER_LOOP
ENDM

PRINT_ARRAY MACRO ARRAY, LENGTH, LABEL_NAME
    MOV CX, LENGTH
    MOV SI, 0
    &LABEL_NAME:           ; USING DYNAMIC LABEL
    MOV AX, ARRAY[SI]
    CALL PRINT_NUM
    ADD SI, 2
    PRINT ' '
    LOOP &LABEL_NAME
ENDM

FIND_ODD_EVEN PROC
    MOV CX, N
    MOV SI, 0            
    MOV DI, 0             
    MOV BX, 0            
    MOV ODD_SUM, 0       
    MOV EVEN_SUM, 0       

ODD_EVEN_LOOP:
    MOV AX, ARR[SI]       
    MOV DX, 0
    PUSH AX
    DIV DIVISOR
    POP AX
    CMP DX, 0
    JE IS_EVEN
    ; IF ODD
    MOV ODD_ARR[DI], AX
    ADD ODD_SUM, AX       
    ADD DI, 2
    INC ODD_COUNT
    JMP NEXT_ELEMENT

IS_EVEN:
    ; IF EVEN
    MOV EVEN_ARR[BX], AX
    ADD EVEN_SUM, AX      
    ADD BX, 2
    INC EVEN_COUNT

NEXT_ELEMENT:
    ADD SI, 2             
    LOOP ODD_EVEN_LOOP
    RET
FIND_ODD_EVEN ENDP

MAIN PROC
    MOV AX, @DATA
    MOV DS, AX  
   
    PRINT 'ENTER THE NUMBER OF ELEMENTS: '
    CALL SCAN_NUM
    MOV N, CX
    PRINTN ''
    ENTER_NUMBERS ARR, N
    PRINTN ''
    PRINT 'ARRAY: '
    PRINT_ARRAY ARR, N, PRINT_MAIN_ARRAY
    PRINTN ''

    CALL FIND_ODD_EVEN

    PRINTN ''
    PRINT 'ODD DIGITS: '
    MOV CX, N
    PRINT_ARRAY ODD_ARR, ODD_COUNT, PRINT_ODD_ARRAY
    PRINTN ''

    PRINT 'EVEN DIGITS: '
    MOV CX, N
    PRINT_ARRAY EVEN_ARR, EVEN_COUNT, PRINT_EVEN_ARRAY
    PRINTN ''

    PRINT 'SUM OF ODD DIGITS: '
    MOV AX, ODD_SUM
    CALL PRINT_NUM
    PRINTN ''

    PRINT 'SUM OF EVEN DIGITS: '
    MOV AX, EVEN_SUM
    CALL PRINT_NUM
    PRINTN ''

    MOV AH, 4CH  
    INT 21H  
MAIN ENDP  

DEFINE_SCAN_NUM
DEFINE_PRINT_NUM
DEFINE_PRINT_NUM_UNS  

END MAIN
